{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "firstnewsp"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"Azure_DB_SRC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Azure_DB_SRC'"
		},
		"LS_Sukhendra_Storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Sukhendra_Storage'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "spcoreserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Trainingdatabase02"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SQLadmin"
		},
		"Azure_DB_SRC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "spcoreserver.database.windows.net"
		},
		"Azure_DB_SRC_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Trainingdatabase01"
		},
		"Azure_DB_SRC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "SQLadmin"
		},
		"LS_Sukhendra_Storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sukhendra.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Cust_dataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Cust",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "output",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cutomer": {},
									"orders": {},
									"output": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-29T18:59:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Incremental_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy orders",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_OLD",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LKP_NEW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \nFROM order_table \nWHERE insertdatetime > '@{activity('LKP_OLD').output.firstRow.old_value}' \n  AND insertdatetime <= '@{activity('LKP_NEW').output.firstRow.new_value}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_SRC_DB",
								"type": "DatasetReference",
								"parameters": {
									"Table_Name": "order_table"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_order_table_tgt",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LKP_OLD",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select table_name,last_updated as old_value from watermark where table_name ='order_table'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_watermark_tbl_tgt",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_NEW",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(insertdatetime) as new_value from order_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_SRC_DB",
								"type": "DatasetReference",
								"parameters": {
									"Table_Name": "order_table"
								}
							}
						}
					},
					{
						"name": "updatedwatermark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy orders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSetWatermark]",
							"storedProcedureParameters": {
								"NewTime": {
									"value": {
										"value": "@activity('LKP_NEW').output.firstRow.new_value",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"table_name": {
									"value": {
										"value": "@activity('LKP_OLD').output.firstRow.table_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-29T08:33:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_SRC_DB')]",
				"[concat(variables('factoryId'), '/datasets/SQL_order_table_tgt')]",
				"[concat(variables('factoryId'), '/datasets/SQL_watermark_tbl_tgt')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Customer_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sukhendra_Storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer.csv",
						"folderPath": "Apple_sales/2025",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "customer_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sukhendra_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Orders_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sukhendra_Storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "purchase_order.csv",
						"folderPath": "Apple_sales/2025",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sukhendra_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_datalakeoutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sukhendra_Storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "output",
						"fileSystem": "extended"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "String"
					},
					{
						"name": "QUANTITYORDERED",
						"type": "String"
					},
					{
						"name": "PRICEEACH",
						"type": "String"
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					},
					{
						"name": "ORDERDATE",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "QTR_ID",
						"type": "String"
					},
					{
						"name": "MONTH_ID",
						"type": "String"
					},
					{
						"name": "YEAR_ID",
						"type": "String"
					},
					{
						"name": "PRODUCTLINE",
						"type": "String"
					},
					{
						"name": "MSRP",
						"type": "String"
					},
					{
						"name": "PRODUCTCODE",
						"type": "String"
					},
					{
						"name": "CUSTOMERNAME",
						"type": "String"
					},
					{
						"name": "PHONE",
						"type": "String"
					},
					{
						"name": "ADDRESSLINE1",
						"type": "String"
					},
					{
						"name": "ADDRESSLINE2",
						"type": "String"
					},
					{
						"name": "CITY",
						"type": "String"
					},
					{
						"name": "STATE",
						"type": "String"
					},
					{
						"name": "POSTALCODE",
						"type": "String"
					},
					{
						"name": "COUNTRY",
						"type": "String"
					},
					{
						"name": "TERRITORY",
						"type": "String"
					},
					{
						"name": "CONTACTLASTNAME",
						"type": "String"
					},
					{
						"name": "CONTACTFIRSTNAME",
						"type": "String"
					},
					{
						"name": "DEALSIZE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sukhendra_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sukhendra_Storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dataflow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "purchase_order.csv",
						"folderPath": "Apple_sales/2025",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sukhendra_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Invoice_Tgt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "invoice_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_name",
						"type": "varchar"
					},
					{
						"name": "invoice_date",
						"type": "date"
					},
					{
						"name": "total_amount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "invoice"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SRC_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_DB_SRC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().Table_Name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_DB_SRC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_order_table_tgt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "invoice_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price_per_unit",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "order_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_watermark_tbl_tgt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "watermark_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "table_name",
						"type": "varchar"
					},
					{
						"name": "last_updated",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermark"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_DB_SRC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Azure_DB_SRC_properties_typeProperties_server')]",
					"database": "[parameters('Azure_DB_SRC_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Azure_DB_SRC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Azure_DB_SRC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Sukhendra_Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Sukhendra_Storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Sukhendra_Storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/output')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Customer_data",
								"type": "DatasetReference"
							},
							"name": "cutomer"
						},
						{
							"dataset": {
								"referenceName": "DS_Orders_data",
								"type": "DatasetReference"
							},
							"name": "orders"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_datalakeoutput",
								"type": "DatasetReference"
							},
							"name": "output"
						}
					],
					"transformations": [
						{
							"name": "selectedcolumnscu"
						},
						{
							"name": "selectedColumns"
						},
						{
							"name": "QC1"
						},
						{
							"name": "join1"
						},
						{
							"name": "agg"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customer_id as integer,",
						"          customer_name as string,",
						"          email as string,",
						"          city as string,",
						"          created_at as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> cutomer",
						"source(output(",
						"          order_id as integer,",
						"          customer_id as integer,",
						"          order_date as date,",
						"          amount as integer,",
						"          status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> orders",
						"cutomer select(mapColumn(",
						"          customer_id,",
						"          customer_name,",
						"          created_at",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectedcolumnscu",
						"orders select(mapColumn(",
						"          order_id,",
						"          customer_id,",
						"          amount,",
						"          status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectedColumns",
						"selectedColumns filter(!(status == 'Pending' || status == 'Cancelled')) ~> QC1",
						"QC1, selectedcolumnscu join(selectedColumns@customer_id == selectedcolumnscu@customer_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 aggregate(groupBy(selectedColumns@customer_id,",
						"          order_id,",
						"          status,",
						"          customer_name),",
						"     amount = sum(amount)) ~> agg",
						"agg sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ORDERNUMBER as string,",
						"          QUANTITYORDERED as string,",
						"          PRICEEACH as string,",
						"          ORDERLINENUMBER as string,",
						"          SALES as string,",
						"          ORDERDATE as string,",
						"          STATUS as string,",
						"          QTR_ID as string,",
						"          MONTH_ID as string,",
						"          YEAR_ID as string,",
						"          PRODUCTLINE as string,",
						"          MSRP as string,",
						"          PRODUCTCODE as string,",
						"          CUSTOMERNAME as string,",
						"          PHONE as string,",
						"          ADDRESSLINE1 as string,",
						"          ADDRESSLINE2 as string,",
						"          CITY as string,",
						"          STATE as string,",
						"          POSTALCODE as string,",
						"          COUNTRY as string,",
						"          TERRITORY as string,",
						"          CONTACTLASTNAME as string,",
						"          CONTACTFIRSTNAME as string,",
						"          DEALSIZE as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> output"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Customer_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_Orders_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_datalakeoutput')]"
			]
		}
	]
}